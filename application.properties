debug=true
server.port=8080
spring.datasource.url=jdbc:mysql://localhost:3306/tests?useUnicode=true&characterEncoding=utf-8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.platform=mysql
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=20
spring.datasource.minIdle=3
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=30000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;
# 合并多个DruidDataSource的监控数据
#useGlobalDataSourceStat=true
#logging.level.com.yunhongkg.operation.mapper=debug
#logging.level.com.yunhongkg.file.mapper=debug
#mybatis.mapper-locations=classpath*:com/yunhongkg/mapper/*.xml

jwt.config.id=id
jwt.config.issuer=issuer
jwt.config.subject=subject
jwt.config.secretKey=secretKey
jwt.config.audience=operation
# token有效期，单位秒
jwt.config.expiresSecond=1800
com.yunhongkg.auth.allowed-paths=/common/userList,/task-center/**,/modeler.html,/editor-app/**,/modeler/**,/diagram-viewer/**,/auth/login,/auth/logout,/favicon.ico,/swagger-ui.html,/swagger-resources/**,/images/**,/webjars/**,/v2/api-docs,/configuration/ui,/configuration/security
com.yunhongkg.log.classifiedField=password
com.yunhongkg.log.classifiedPath=/user/password,/auth/reload,/auth/refresh
com.yunhongkg.log.param.length=4000

com.yunhongkg.form.excludeTables=biz_form_item,biz_form_relation
com.yunhongkg.form.includeTables=
com.yunhongkg.form.excludeColumns=creator,creator_id,updator,create_time,update_time,version,deleted,ts,id
com.yunhongkg.form.tableNamePrifix=biz_form_
com.yunhongkg.process.form.excludeTables=biz_form_item,biz_form_relation
com.yunhongkg.process.form.excludeColumns=id,creator,creator_id,updator,create_time,update_time,version,deleted,ts
# 审批意见弹窗
com.yunhongkg.form.commentFrame={"self":{"col":24,"type":"textarea"},"child":{},"data":{}}
#com.yunhongkg.form.commentFrame={\"self\":{\"col\":11},\"child\":{},\"data\":{}}

#自定义activiti工作表中的id表，false表示每次启动放弃id表的验证
spring.activiti.db-identity-used=true
#每次启动回去验证act表，如果缺少某张表，则重新创建
spring.activiti.database-schema-update=true
spring.activiti.process-definition-location-prefix=file:///D/process
yunhongkg.file.upload.storage-path=D:/upload

yunhongkg.file.export.export-path=D:/库存.xls

yunhongkg.url.sdj-url=http://vip.shidianjin.com/api/get_result/
yunhongkg.url.sdj-uuid=dc2f8821

#阿里云短信业务配置
aliyun.accessKeySecret=KY5c2hrIBfvbt4RW6Ko49X8oWO8qaE
aliyun.accessKeyId=LTAIiw1FmUC5BWvw
aliyun.regionID=cn-hangzhou
#申请短信通知模板
aliyun.templateCode=SMS_180061619
#审批完成短信通知模板
aliyun.templateCodeOne=SMS_182666087
aliyun.signName=\u8fd0\u9e3f\u96c6\u56e2

spring.servlet.multipart.maxFileSize=900Mb
spring.servlet.multipart.maxRequestSize=1000Mb

#spring.datasource.druid.filter.enabled=true
#spring.datasource.druid.filter.statement-create-after-log-enabled=false
#spring.datasource.druid.filter.statement-log-enabled=true
#spring.datasource.druid.filter.statement-executable-sql-log-enable=true
#spring.datasource.druid.filter.statement-log-error-enabled=true
#spring.datasource.druid.filter.result-set-log-enabled=true
### 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处去除防火墙
#spring.datasource.druid.filters=config,stat,slf4j
### 配置过滤器wall的参数
#spring.datasource.druid.filter.wall.config.use-allow=false
#spring.datasource.druid.filter.wall.config.multi-statement-allow=true
##datasource
##Introductions: https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8
##https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_DruidDataSource%E5%8F%82%E8%80%83%E9%85%8D%E7%BD%AE
##初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时 default:0
#spring.datasource.druid.initial-size=2
##最大连接池数量。default=8+
#spring.datasource.druid.max-active=20
##最小连接池数量。maxIdle已经废弃
#spring.datasource.druid.min-idle=10
##获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
#spring.datasource.druid.max-wait=60000
##是否缓存preparedStatement,也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。default=false
#spring.datasource.druid.pool-prepared-statements=false
##要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，会存在Oracle下PSCache占用内存过多的问题，可以把这个数据配置大一些，比如100.default=-1
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1
##用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null,testOnBorrow,testOnBorrow,testOnReturn,testWhileIdle都不会起作用。这个可以不配置
##spring.datasource.druid.validation-query=select 'x'
##单位:秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void. setQueryTImeout(int seconds)方法,mysql实现的不是很合理，不建议在mysql下配置此参数
##spring.datasource.druid.validation-query-timeout=60
##申请连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能。default=true
#spring.datasource.druid.test-on-borrow=false
##归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。default=false
#spring.datasource.druid.test-on-return=false
##建议配置为true,不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。default=false
#spring.datasource.druid.test-while-idle=true
##连接池中的minIdle数据以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。default=false
#spring.datasource.druid.keep-alive=true
##配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 default=1分钟
##有两个含义：
## (1)Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接
## (2)testWhileIdle的判断依据，详细看testWhileIdle属性的说明
#spring.datasource.druid.time-between-eviction-runs-millis=60000
##池中的连接保持空闲而不被驱逐的最小时间，单位是毫秒
#spring.datasource.druid.min-evictable-idle-time-millis=300000
##合并多个DruidDataSource的监控数据
#spring.datasource.druid.use-global-data-source-stat=true
##spring.datasource.druid.filters=#配置多个英文逗号分隔
## 配置StatFilter
#spring.datasource.druid.filter.stat.enabled=true
#spring.datasource.druid.filter.stat.db-type=mysql
#spring.datasource.druid.filter.stat.log-slow-sql=true
#spring.datasource.druid.filter.stat.slow-sql-millis=2000
#spring.datasource.druid.filter.stat.merge-sql=true
## 配置WallFilter
#spring.datasource.druid.filter.wall.enabled=true
#spring.datasource.druid.filter.wall.db-type=mysql
#spring.datasource.druid.filter.wall.config.delete-allow=false
#spring.datasource.druid.filter.wall.config.drop-table-allow=false
#spring.datasource.druid.filter.wall.config.create-table-allow=false
#spring.datasource.druid.filter.wall.config.alter-table-allow=false
#spring.datasource.druid.filter.wall.config.truncate-allow=false
